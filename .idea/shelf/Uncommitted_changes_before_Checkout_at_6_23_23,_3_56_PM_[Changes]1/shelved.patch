Index: src/UserApplicationSrarter/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UserApplicationSrarter;\n\nimport DataBase.DBManager;\nimport inheritance.ObjectStream;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.util.Scanner;\n\nimport static UserApplicationSrarter.ORDER.*;\n\npublic class UserController {\n\n    public static void singUp(ObjectStream stream) {\n        String username = null, phone = null, email = null, pass = null;\n        Scanner scan = new Scanner(System.in);\n\n        System.out.println(\"enter a user name :\");\n        do {\n            if (username != null) System.out.println(\"the username has existed already, choose another :\");\n            username = scan.nextLine();\n            ObjectStream.WRITE((String.valueOf(CheckUserName)));\n            ObjectStream.WRITE((username));\n        } while (!stream.READ().equals(\"false\"));\n        System.out.println(\"enter your first name :\");\n        String firstname = scan.nextLine();\n\n        System.out.println(\"enter your last name :\");\n        String lastname = scan.nextLine();\n\n        System.out.println(\"choose email(1) or phone(2) or both(3) :\");\n        String choicePhoneOrEmail = scan.nextLine();\n\n        if (choicePhoneOrEmail.equals(\"2\") || choicePhoneOrEmail.equals(\"3\"))\n            phone = getPhoneNumber(stream);\n\n        if (choicePhoneOrEmail.equals(\"1\") || choicePhoneOrEmail.equals(\"3\"))\n            email = getEmail(stream);\n\n        pass = getPass(stream);\n\n        System.out.println(\"enter a country (if you want can see list of country by enter show) :\");\n        String country = scan.nextLine();\n        if (country.equals(\"show\")) {\n            show();\n            country = scan.nextLine();\n        }\n        System.out.println(\"enter your birthdate by this format YYYY/MM/DD :\");\n        String birthDate = scan.nextLine();\n\n        ObjectStream.WRITE(InsertUser + \"\");\n        ObjectStream.WRITE(username + \"//\" + firstname + \"//\" + lastname + \"//\" + email + \"//\" + phone + \"//\" + pass + \"//\" + country + \"//\" + birthDate);\n//        DBManager.insertUserToDB(username, firstname, lastname, email, phone, pass, country, birthDate,\n//                LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")),\n//                LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")));\n    }\n\n    public static void show() {\n        System.out.println(\"\\tlist of country :\\niran\");\n    }\n\n    public static void signIn(ObjectStream stream) {\n        Scanner scan = new Scanner(System.in);\n        String username = null, pass = null;\n        System.out.println(\"enter your username :\");\n        do {\n            if (username != null) System.out.println(\"the username has not existed, choose another :\");\n            username = scan.nextLine();\n            ObjectStream.WRITE((String.valueOf(CheckUserName)));\n            ObjectStream.WRITE((username));\n        } while (stream.READ().equals(\"false\"));\n\n        System.out.println(\"enter your password :\");\n        do {\n            if (pass != null) System.out.println(\"invalid pass, try again :\");\n            pass = scan.nextLine();\n            ObjectStream.WRITE(String.valueOf(CheckPassSingIn));\n            ObjectStream.WRITE(username);\n            ObjectStream.WRITE(pass);\n        }\n        while (stream.READ().equals(\"false\"));\n\n        ObjectStream.WRITE(String.valueOf(AcceptSignIn));\n        ObjectStream.WRITE(username);\n\n        afterSignIn(username, stream);\n    }\n\n    public static void afterSignIn(String username, ObjectStream stream) {\n        Scanner scan = new Scanner(System.in);\n        while (true) {\n            System.out.println(\"\\t1 - log out\\n\\t2 - edit profile\");\n            String order = scan.nextLine();\n            switch (order) {\n                case \"1\" -> {\n                    stream.WRITE(LOGIUT + \"\");\n                    stream.WRITE(username);\n                    return;\n                }\n                case \"2\" -> editProfile(username, stream);\n            }\n        }\n    }\n\n    public static void editProfile(String username, ObjectStream stream) {\n        Scanner scan = new Scanner(System.in);\n        while (true) {\n            System.out.println(\"\"\"\n                    \\t1 - enter phone number\n                    \\t2 - enter email\n                    \\t3 - change password\n                    \\t4 - write a bio\n                    \\t5 - set location\n                    \\t6 - write your web address\n                    \\t7 - set avatar\n                    \\t8 - set header\n                    \\t9 - back\"\"\");\n\n            switch (scan.nextLine()) {\n                case \"1\" -> {\n                    String PhoneNumber = getPhoneNumber(stream);\n                    ObjectStream.WRITE(String.valueOf(UpdatePhoneNumber));\n                    ObjectStream.WRITE(PhoneNumber);\n                    ObjectStream.WRITE(username);\n                }\n                case \"2\" -> {\n                    String Email = getEmail(stream);\n                    ObjectStream.WRITE(String.valueOf(UpdateEmail));\n                    ObjectStream.WRITE(Email);\n                    ObjectStream.WRITE(username);\n                }\n                case \"3\" -> {\n                    String Pass = getPass(stream);\n                    ObjectStream.WRITE(String.valueOf(UpdatePassword));\n                    ObjectStream.WRITE(Pass);\n                    ObjectStream.WRITE(username);\n                }\n                case \"4\" -> {\n                    System.out.println(\"enter your bio (at most character is 160)\");\n                    String bio = null;\n                    do {\n                        if (bio != null) System.out.println(\"your bio is too long,try again by at most 160 character :\");\n                        bio = scan.nextLine();\n                    } while (!(bio.length() <= 160));\n                    ObjectStream.WRITE(String.valueOf(UpdateBio));\n                    ObjectStream.WRITE(bio);\n                    ObjectStream.WRITE(username);\n                }\n                case \"5\" -> {\n                    System.out.println(\"write your location :\");\n                    ObjectStream.WRITE(String.valueOf(UpdateLocation));\n                    ObjectStream.WRITE(scan.nextLine());\n                    ObjectStream.WRITE(username);\n                }\n                case \"6\" -> {\n                    System.out.println(\"write your web address :\");\n                    ObjectStream.WRITE(String.valueOf(UpdateWebAddress));\n                    ObjectStream.WRITE(scan.nextLine());\n                    ObjectStream.WRITE(username);\n                }\n                case \"7\" -> {\n                    System.out.println(\"Give path of your avatar file like this(c:\\\\directory\\\\file_name.jpg) \");\n                    ObjectStream.WRITE(String.valueOf(UpdateAvatar));\n                    ObjectStream.WRITE(scan.nextLine());\n                    ObjectStream.WRITE(username);\n                }\n                case \"8\" -> {\n                    System.out.println(\"Give path of your header file like this(c:\\\\directory\\\\file_name.jpg) \");\n                    ObjectStream.WRITE(String.valueOf(UpdateHeader));\n                    ObjectStream.WRITE(scan.nextLine());\n                    ObjectStream.WRITE(username);\n                }\n                case \"9\" -> {\n                    return;\n                }\n            }\n        }\n    }\n\n    public static String getPhoneNumber(ObjectStream stream) {\n        Scanner scan = new Scanner(System.in);\n        String phone = null;\n        System.out.println(\"enter your phone number :\");\n        String answer;\n        do {\n            phone = scan.nextLine();\n            ObjectStream.WRITE(String.valueOf(PhoneNumber));\n            ObjectStream.WRITE((phone));\n            answer = stream.READ();\n            if (answer.equals(\"invalid\")) System.out.println(\"phone number is invalid, try again :\");\n            if (answer.equals(\"repeat\")) System.out.println(\"phone number is available, choose another : \");\n        } while (!answer.equals(\"true\"));\n        return phone;\n    }\n\n    public static String getEmail(ObjectStream stream) {\n        System.out.println(\"enter your email :\");\n        Scanner scan = new Scanner(System.in);\n        String answer, email = null;\n        do {\n            email = scan.nextLine();\n            ObjectStream.WRITE(String.valueOf(Email));\n            ObjectStream.WRITE((email));\n            answer = stream.READ();\n            if (answer.equals(\"invalid\")) System.out.println(\"email is invalid, try again :\");\n            if (answer.equals(\"repeat\")) System.out.println(\"email is available, choose another : \");\n        } while (!answer.equals(\"true\"));\n        return email;\n    }\n\n    public static String getPass(ObjectStream stream) {\n        boolean checkSame = true, validPass = true;\n        Scanner scan = new Scanner(System.in);\n        String pass = null, auxPass;\n        System.out.println(\"write a password :\");\n        do {\n            pass = scan.nextLine();\n            System.out.println(\"repeat your password :\");\n            auxPass = scan.nextLine();\n            ObjectStream.WRITE(String.valueOf(CheckPass));\n            ObjectStream.WRITE((pass));\n            validPass = stream.READ().equals(\"true\");\n            if (!validPass) System.out.println(\"invalid password :\");\n\n            if (validPass) {\n                if (!pass.equals(auxPass)) {\n                    System.out.println(\"repeated password is incorrect, try again :\");\n                    checkSame = false;\n                } else checkSame = true;\n            }\n        } while (!validPass || !checkSame);\n        return pass;\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/UserApplicationSrarter/UserController.java b/src/UserApplicationSrarter/UserController.java
--- a/src/UserApplicationSrarter/UserController.java	
+++ b/src/UserApplicationSrarter/UserController.java	
@@ -50,9 +50,6 @@
 
         ObjectStream.WRITE(InsertUser + "");
         ObjectStream.WRITE(username + "//" + firstname + "//" + lastname + "//" + email + "//" + phone + "//" + pass + "//" + country + "//" + birthDate);
-//        DBManager.insertUserToDB(username, firstname, lastname, email, phone, pass, country, birthDate,
-//                LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy/MM/dd")),
-//                LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy/MM/dd")));
     }
 
     public static void show() {
